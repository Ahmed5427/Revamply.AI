{
  "name": "REVAMPLY.AI",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "revamply-form",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        -544,
        -160
      ],
      "id": "1535c539-9035-45f6-93a5-863155cae075",
      "name": "Webhook",
      "webhookId": "681210d9-c48a-4ced-9dd2-93d402eaebfa"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "chatgpt-4o-latest",
          "mode": "list",
          "cachedResultName": "CHATGPT-4O-LATEST"
        },
        "messages": {
          "values": [
            {
              "content": "=You are an AI solutions expert at Revamply. Generate a comprehensive AI solution blueprint based on this submission:\n\n**Client Info:**\n- Name: {{ $('Webhook').item.json.body.firstName }}\n- Business: {{ $('Webhook').item.json.body.businessDescription }}\n- Department: {{ $('Webhook').item.json.body.department }}\n- Current Process: {{ $('Webhook').item.json.body.currentProcess }}\n- Pain Points: {{ $('Webhook').item.json.body.painPoints }}\n- Primary Goal: {{ $('Webhook').item.json.body.businessImpact }}\n- Process Frequency: {{ $('Webhook').item.json.body.processFrequencyCategory }}\n\n**Generate response"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        272,
        -160
      ],
      "id": "1cf52ca7-0f53-4371-bc0c-501249f07c24",
      "name": "Message a model",
      "credentials": {
        "openAiApi": {
          "id": "rw1M18gNodaVwywr",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Parse the OpenAI response and prepare for sending back to the application\ntry {\n  const openAiResponse = $input.all()[0].json.message.content;\n  let blueprint;\n  \n  try {\n    blueprint = JSON.parse(openAiResponse);\n  } catch (parseError) {\n    console.log('Failed to parse OpenAI response, creating fallback');\n    \n    const data = $input.all()[0].json;\n    blueprint = {\n      \"businessType\": `${data.department} Solutions`,\n      \"solutions\": [\n        {\n          \"title\": \"Automated Process Optimization\",\n          \"description\": `AI-powered automation for ${data.department} to improve ${data.businessImpact}`,\n          \"features\": [\n            \"Process automation and workflow optimization\",\n            \"Real-time performance monitoring\", \n            \"Integration with existing systems\"\n          ]\n        },\n        {\n          \"title\": \"Intelligent Data Analytics\",\n          \"description\": \"Advanced analytics for data-driven decision making\",\n          \"features\": [\n            \"Predictive analytics and forecasting\",\n            \"Custom dashboard and reporting\",\n            \"Performance metrics and KPI tracking\"\n          ]\n        },\n        {\n          \"title\": \"Smart Communication System\", \n          \"description\": \"AI-enhanced communication and collaboration tools\",\n          \"features\": [\n            \"Automated notifications and alerts\",\n            \"Intelligent routing and prioritization\",\n            \"Natural language processing capabilities\"\n          ]\n        }\n      ]\n    };\n  }\n  \n  const originalData = $input.all()[0].json;\n  \n  return {\n    submissionId: originalData.submissionId,\n    blueprint: blueprint,\n    status: 'completed',\n    generatedAt: new Date().toISOString()\n  };\n  \n} catch (error) {\n  console.error('Error in blueprint processing:', error);\n  \n  return {\n    submissionId: $input.all()[0].json.submissionId,\n    status: 'error',\n    error: 'Failed to generate blueprint: ' + error.message,\n    errorAt: new Date().toISOString()\n  };\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        784,
        -160
      ],
      "id": "16fe1232-5a2c-4fd7-bc05-b32dc2c6e132",
      "name": "Code"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://revamply-ai.vercel.app/api/receive-blueprint",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "submissionId",
              "value": "={{ $('Webhook').item.json.body.submissionId }}"
            },
            {
              "name": "blueprint",
              "value": "={{ $json.message.content }}"
            },
            {
              "name": "contactName",
              "value": "={{ $('Webhook').item.json.body.fullName }}"
            },
            {
              "name": "status",
              "value": "completed"
            },
            {
              "name": "contactEmail",
              "value": "={{ $('Webhook').item.json.body.email }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        608,
        -16
      ],
      "id": "7aa44950-f60f-48e9-a866-06784c7eae64",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n       \"success\": true,\n       \"message\": \"Form submission processed successfully\",\n       \"submissionId\": \"{{ $('Webhook').item.json.body.submissionId }}\",\n       \"status\": \"processing\"\n     }",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        784,
        -16
      ],
      "id": "32334bf1-4219-4785-82d0-54df6815267b",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "23c48f38-4d79-482f-8cd5-9c59322fc2bc",
              "leftValue": "={{ $json.body.webhookType }}",
              "rightValue": "simplified_form_submission",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -384,
        -160
      ],
      "id": "2e99cf27-dfbd-42e6-aa71-5ebc24d81eb2",
      "name": "If"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "email": "={{ $('Webhook').item.json.body.email }}",
        "additionalFields": {
          "customPropertiesUi": {
            "customPropertiesValues": [
              {
                "property": "business_description",
                "value": "={{ $('Webhook').item.json.body.businessDescription }}"
              },
              {
                "property": "target_department",
                "value": "={{ $('Webhook').item.json.body.department }}"
              },
              {
                "property": "current_process",
                "value": "={{ $('Webhook').item.json.body.currentProcess }}"
              },
              {
                "property": "pain_points",
                "value": "={{ $('Webhook').item.json.body.painPoints }}"
              },
              {
                "property": "business_impact_goal",
                "value": "={{ $('Webhook').item.json.body.businessImpact }}"
              },
              {
                "property": "process_frequency",
                "value": "={{ $('Webhook').item.json.body.processFrequency }}"
              },
              {
                "property": "submission_id",
                "value": "={{ $('Webhook').item.json.body.submissionId }}"
              },
              {
                "property": "lead_status",
                "value": "blueprint generating"
              }
            ]
          },
          "firstName": "={{ $('Webhook').item.json.body.firstName }}",
          "lastName": "={{ $('Webhook').item.json.body.lastName }}",
          "phoneNumber": "={{ $('Webhook').item.json.body.phone }}"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.hubspot",
      "typeVersion": 2.1,
      "position": [
        608,
        -320
      ],
      "id": "dab6bb26-b409-4fbd-ba7b-51aa8e92caba",
      "name": "Create or update a contact1",
      "credentials": {
        "hubspotOAuth2Api": {
          "id": "wcRxxejTpF4b5dsx",
          "name": "HubSpot account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C09BF3YH8TD",
          "mode": "list",
          "cachedResultName": "revamply-ai"
        },
        "text": "=New Lead called {{ $json.properties.firstname.value }}, Hereâ€™s some info:\n1. Email: {{ $('Webhook').item.json.body.email }}\n2. Department: {{ $('Webhook').item.json.body.department }}\n3. Bussiness Description: {{ $('Webhook').item.json.body.businessDescription }}",
        "otherOptions": {}
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        784,
        -320
      ],
      "id": "8d2e926c-f21b-4762-a6fb-9bc0a097db2c",
      "name": "Send a message1",
      "webhookId": "a2022525-e742-4461-aff2-7834dc671ffc",
      "credentials": {
        "slackOAuth2Api": {
          "id": "pVgWdsvSzxpQsLPa",
          "name": "Slack account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "operation": "search",
        "returnAll": true,
        "filterGroupsUi": {
          "filterGroupsValues": [
            {
              "filtersUi": {
                "filterValues": [
                  {
                    "propertyName": "email|string",
                    "value": "={{ $('Webhook').item.json.body.email }}"
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.hubspot",
      "typeVersion": 2.1,
      "position": [
        -160,
        -176
      ],
      "id": "5e849029-dd95-4137-8cff-ea96850d6e2f",
      "name": "Search contacts \"Email\"",
      "alwaysOutputData": true,
      "credentials": {
        "hubspotOAuth2Api": {
          "id": "wcRxxejTpF4b5dsx",
          "name": "HubSpot account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "1b8a4b0f-dada-4d20-809d-e72be4493ca5",
              "leftValue": "={{ $('Webhook').item.json.body.email }}",
              "rightValue": "No fields - item(s) exist, but they're empty",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "ignoreCase": false
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        48,
        -176
      ],
      "id": "72821048-623e-4b89-8df4-d110200fc59e",
      "name": "Checkpoint"
    },
    {
      "parameters": {
        "sendTo": "Duncanmac1978@gmail.com",
        "subject": "={{ $('Webhook').item.json.body.source }}",
        "emailType": "text",
        "message": "=Solution 1: {{ $json.blueprint.solutions[0].title }}.\nDescription: {{ $json.blueprint.solutions[0].description }}.\nFeatures: {{ $json.blueprint.solutions[0].features[0] }}, {{ $json.blueprint.solutions[0].features[1] }}, {{ $json.blueprint.solutions[0].features[2] }}.\n-----------------------------------------------------------\nSolution 2:{{ $json.blueprint.solutions[1].title }}.\nDescription: {{ $json.blueprint.solutions[1].description }}.\nFeatures: {{ $json.blueprint.solutions[1].features[0] }}, {{ $json.blueprint.solutions[1].features[1] }}, {{ $json.blueprint.solutions[1].features[2] }}.\n-----------------------------------------------------------\nSolution 3: {{ $json.blueprint.solutions[2].title }}.\nDescription: {{ $json.blueprint.solutions[2].description }}.\nFeatures: {{ $json.blueprint.solutions[2].features[0] }}, {{ $json.blueprint.solutions[2].features[1] }}, {{ $json.blueprint.solutions[2].features[2] }}.\n-----------------------------------------------------------\n\nFeel free to contact us @ Revmaply.support@revmaply.ai",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        992,
        -160
      ],
      "id": "a274dec3-1f6d-486c-a58a-507cc8e0359e",
      "name": "Send a message",
      "webhookId": "5f1d53e8-b097-4620-af82-3b1d60b4b6a9",
      "credentials": {
        "gmailOAuth2": {
          "id": "OkiHlAubpkiCwpo1",
          "name": "Gmail account"
        }
      }
    }
  ],
  "pinData": {
    "Webhook": [
      {
        "json": {
          "headers": {
            "host": "afxv17.app.n8n.cloud",
            "user-agent": "node",
            "content-length": "2222",
            "accept": "*/*",
            "accept-encoding": "gzip, br",
            "accept-language": "*",
            "cdn-loop": "cloudflare; loops=1; subreqs=1",
            "cf-connecting-ip": "34.230.1.84",
            "cf-ew-via": "15",
            "cf-ipcountry": "US",
            "cf-ray": "9874dd6a67a5d6bd-IAD",
            "cf-visitor": "{\"scheme\":\"https\"}",
            "cf-worker": "n8n.cloud",
            "content-type": "application/json",
            "sec-fetch-mode": "cors",
            "x-forwarded-for": "34.230.1.84, 172.71.195.10",
            "x-forwarded-host": "afxv17.app.n8n.cloud",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "traefik-prod-users-gwc-51-795c6dc87-h4dlc",
            "x-is-trusted": "yes",
            "x-real-ip": "34.230.1.84",
            "x-vercel-id": "dxb1::jn59c-1759247294980-c72b5f19965d"
          },
          "params": {},
          "query": {},
          "body": {
            "submissionId": "38fde2ea-2855-4921-a73a-3631b3e6d7a5",
            "businessDescription": "Medical practice with 3 doctors serving 2,000+ patients. We handle appointment scheduling, patient records, insurance verification, and billing processes.",
            "department": "operations",
            "currentProcess": "Receptionist schedules appointments by phone, manually verifies insurance, doctors update paper charts, billing team enters codes and submits claims weekly.",
            "painPoints": "Double bookings, insurance claim denials, lost paperwork, patients waiting too long for appointments",
            "businessImpact": "quality-improvement",
            "processFrequency": "multiple-daily",
            "fullName": "Dr. Jennifer Park",
            "firstName": "Dr.",
            "lastName": "Jennifer Park",
            "email": "sarah.test@le.com",
            "phone": "+20 555-0121",
            "countryCode": "+20",
            "phoneNumber": "555-0121",
            "timestamp": "2025-09-30T15:48:14.484Z",
            "source": "revamply-landing-page",
            "status": "processing",
            "createdAt": "2025-09-30T15:48:30.183Z",
            "hasPhoneNumber": true,
            "hasPainPoints": true,
            "departmentCategory": "Operational Efficiency",
            "businessImpactCategory": "Quality Enhancement",
            "processFrequencyCategory": "High Frequency",
            "webhookType": "simplified_form_submission",
            "callbackUrl": "https://revamply-ai.vercel.app/api/receive-blueprint",
            "formatted": {
              "contactName": "Dr. Jennifer Park",
              "contactEmail": "sarah.test@le.com",
              "contactPhone": "+20 555-0121",
              "businessOverview": "Medical practice with 3 doctors serving 2,000+ patients. We handle appointment scheduling, patient records, insurance verification, and billing processes.",
              "targetDepartment": "operations",
              "currentWorkflow": "Receptionist schedules appointments by phone, manually verifies insurance, doctors update paper charts, billing team enters codes and submits claims weekly.",
              "challenges": "Double bookings, insurance claim denials, lost paperwork, patients waiting too long for appointments",
              "primaryGoal": "quality-improvement",
              "processOccurrence": "multiple-daily",
              "submissionSummary": "Dr. Jennifer Park from Operational Efficiency department is looking to implement AI solutions for quality enhancement. The target process occurs high frequency and currently involves: Receptionist schedules appointments by phone, manually verifies insurance, doctors update paper char...."
            }
          },
          "webhookUrl": "https://afxv17.app.n8n.cloud/webhook/revamply-form",
          "executionMode": "production"
        }
      }
    ]
  },
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message a model": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          },
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          },
          {
            "node": "Create or update a contact1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Search contacts \"Email\"",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create or update a contact1": {
      "main": [
        [
          {
            "node": "Send a message1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search contacts \"Email\"": {
      "main": [
        [
          {
            "node": "Checkpoint",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Checkpoint": {
      "main": [
        [],
        [
          {
            "node": "Message a model",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a message1": {
      "main": [
        []
      ]
    },
    "Respond to Webhook": {
      "main": [
        []
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "d5dce3dc-f214-4716-a688-38f44e9b22b2",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "e3fe7b5520b5b769c8bda7fa6cb21efd1790e44b3c72c0f8869ba997b745ff0a"
  },
  "id": "tglwGrcQHmM9dfGB",
  "tags": []
}